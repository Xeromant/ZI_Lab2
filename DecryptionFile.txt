На сегодняшний день существует множество программ позволяющих выполнять редактирование изображений. Они рознятся по функционалу, скорости обработки изображений, операционным системам, для которых предназначены.
Функциональное наполнение таких программ зависит от их области применения, а выбор одного из таких приложений должен базироваться на постановке конкретных задач пользователем. Ниже я хочу привести список основных задач, решаемых, с помощью программ такого рода:
	изменение яркости или контраста[1];
	изменение цветовых характеристик изображения;
	наложение фильтров;
	поворот изображения;
	изменение размеров и разрешения изображения;
	рисование на поверхности изображения.
В данной работе будут разобраны алгоритмы обработки изображения в общем виде, а также представлена их возможная реализация, основанная на изучении производительности тех или иных алгоритмов.
Актуальность научно-исследовательской работы заключается в увеличении объёмов общей графической информации доступной для использования обычными пользователями, необходимости обработки большого количества изображений различного разрешения и форматов. 
Объектом научно-исследовательской работы является изучение алгоритмов изменения цветовых характеристик изображения, алгоритмов поворота, а также особенности работы в различных цветовых моделях.
Предмет научно-исследовательской работы: практическое применение алгоритмов изменения цветовых и пространственных характеристик изображения.
Цель работы: изучение и реализация существующих алгоритмов обработки изображений, а также анализ их производительности для создания графического редактора.
Для достижения данной цели мной был сформирован список задач:
	проведение анализа и изучение существующих алгоритмов обработки изображений;
	реализация наиболее эффективных алгоритмов обработки изображений;
	создание графического редактора с использованием изученных алгоритмов.
Для выполнения поставленных задач была выбрана среда разработки «Visual Studio 2019». В качестве языка для разработки был выбран C#. Выбран он был по следующим причинам:
	наличие библиотек, значительно упрощающих работу с графикой;
	возможность быстрого и удобного создания пользовательского интерфейса с помощью средств Windows Forms;
	наличие актуальной и постоянно обновляемой документации.
 
1 Используемые алгоритмы
1.1 Алгоритм изменения яркости изображения
В рамках цифровой графики определение термина «Яркость» не отходит далеко от обычного использования данного слова, поскольку обычно под ним понимается преобладание одних томов над другими.
Если преобладают светлые тона, то это говорит о высоком уровне яркости, а точнее «положительной» яркости[1]. В обратном случае, говорят, что яркость «отрицательна». 
Общая яркость изображения может значительно повлиять на впечатление от изображения у человека. Именно поэтому данный параметр является основополагающим. При разработке приложений с возможностью цветокоррекции функцию изменения яркости добавляют одной из первых. Несмотря на то, что для хорошего восприятия изображения необходим тональный баланс, существуют ситуации, в которых необходимо изменение параметра яркости.
Изменение яркости – это вычитание или прибавление к каждому цветовому каналу некоторого значения, находящегося в переделах от 0 до 255. Для корректной работы алгоритма обязательно производить проверку на предмет выхода изменённого значения цветового канала за указанные выше границы[3]. 
Алгоритм[2] заключается в нахождении фиксированного значения, которое будет прибавляться к значениям цветовых каналов или вычитаться из них. Это представлено в формуле (1).
γ=255-min⁡〖+ max〗	=>	r_i,g_i b_i=r_i,g_i b_i+∆  	(1)
∆ = σ(y/2+yσ/200)/100		p_i=r_i,g_i b_i,
	
где pi – пиксель изображения,  r_i,g_i b_i – каналы цвета текущего пикселя, причём каждая компонента находится в промежутке от 0 до 255, σ – положение бегунка, min и max – минимальное и максимальное значение компонент, n – количество пикселей в изображении[1]. 
1.2 Алгоритм изменения контрастности
Контрастность наряду с яркостью является одной из базовых цветовых характеристик изображения. Механизм данного параметра заключается в том, что при его увеличении все светлые тона становятся ещё светлее, а тёмные, ещё темнее. За счёт этого достигается большая выразительность изображения. Использование повышенной контрастности также может быть полезно во время предобработки документов, перед процессом распознавания символов, поскольку при высоком значении этой характеристики границы символьных знаков проще отслеживать[2].
Результатом увеличения контрастности с точки зрения цветовых компонент происходит рекомбинация тонового охвата, ведущая к его сужению. В случае уменьшения уровня контраста средний тоновый диапазон будет уменьшен, благодаря сглаживанию пограничных цветов и теней[4].
С точки зрения алгоритма, изменение уровня контрастности это умножение или деление каждой из цветовых компонент на некоторое фиксированное значение. В результате происходит изменение соотношений между цветовыми каналами[3].
Преобразования могут быть выполнены с помощью следующей системы (формула 2):


